"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DatePickerStandalone = void 0;
const clsx_1 = __importDefault(require("clsx"));
const date_fns_1 = require("date-fns");
const react_1 = __importStar(require("react"));
const react_day_picker_1 = require("react-day-picker");
const util_1 = require("../../util");
const utils_1 = require("../utils");
const Caption_1 = __importDefault(require("./parts/Caption"));
const DropdownCaption_1 = __importDefault(require("./parts/DropdownCaption"));
const HeadRow_1 = require("./parts/HeadRow");
const Row_1 = __importDefault(require("./parts/Row"));
const TableHead_1 = __importDefault(require("./parts/TableHead"));
const WeekNumber_1 = __importDefault(require("./parts/WeekNumber"));
exports.DatePickerStandalone = (0, react_1.forwardRef)((_a, ref) => {
    var _b;
    var { className, locale = "nb", dropdownCaption, disabled = [], disableWeekends = false, showWeekNumber = false, selected, defaultSelected, onSelect, fixedWeeks = false, onWeekNumberClick } = _a, rest = __rest(_a, ["className", "locale", "dropdownCaption", "disabled", "disableWeekends", "showWeekNumber", "selected", "defaultSelected", "onSelect", "fixedWeeks", "onWeekNumberClick"]);
    const [selectedDates, setSelectedDates] = react_1.default.useState(defaultSelected);
    const mode = (_b = rest.mode) !== null && _b !== void 0 ? _b : "single";
    /**
     * @param newSelected Date | Date[] | DateRange | undefined
     */
    const handleSelect = (newSelected) => {
        setSelectedDates(newSelected);
        onSelect === null || onSelect === void 0 ? void 0 : onSelect(newSelected);
    };
    return (react_1.default.createElement("div", { ref: ref, className: (0, clsx_1.default)("navds-date__standalone-wrapper", className) },
        react_1.default.createElement(react_day_picker_1.DayPicker, Object.assign({ locale: (0, utils_1.getLocaleFromString)(locale), mode: mode, onSelect: handleSelect, selected: selected !== null && selected !== void 0 ? selected : selectedDates, components: {
                Caption: dropdownCaption ? DropdownCaption_1.default : Caption_1.default,
                Head: TableHead_1.default,
                HeadRow: HeadRow_1.HeadRow,
                WeekNumber: WeekNumber_1.default,
                Row: Row_1.default,
            }, className: "navds-date", classNames: { vhidden: "navds-sr-only" }, disabled: (day) => {
                return ((disableWeekends && (0, date_fns_1.isWeekend)(day)) || (0, react_day_picker_1.isMatch)(day, disabled));
            }, weekStartsOn: 1, initialFocus: false, labels: utils_1.labels, modifiers: {
                weekend: (day) => disableWeekends && (0, date_fns_1.isWeekend)(day),
            }, modifiersClassNames: {
                weekend: "rdp-day__weekend",
            }, showWeekNumber: showWeekNumber, onWeekNumberClick: mode === "multiple" ? onWeekNumberClick : undefined, fixedWeeks: fixedWeeks, showOutsideDays: true }, (0, util_1.omit)(rest, ["children", "id"])))));
});
exports.default = exports.DatePickerStandalone;
//# sourceMappingURL=DatePickerStandalone.js.map