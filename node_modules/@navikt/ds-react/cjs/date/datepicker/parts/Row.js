"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const date_fns_1 = require("date-fns");
const react_1 = __importDefault(require("react"));
const react_day_picker_1 = require("react-day-picker");
const responsive_1 = require("../../../layout/responsive");
const DayButton_1 = __importDefault(require("./DayButton"));
const WeekNumber_1 = __importDefault(require("./WeekNumber"));
/**
 * https://github.com/gpbl/react-day-picker/tree/main/src/components/Row
 */
function Row(props) {
    const { styles, classNames, showWeekNumber } = (0, react_day_picker_1.useDayPicker)();
    return (react_1.default.createElement("tr", { className: classNames.row, style: styles.row },
        showWeekNumber && (react_1.default.createElement(responsive_1.Hide, { below: "sm", asChild: true },
            react_1.default.createElement("td", { className: classNames.cell, style: styles.cell },
                react_1.default.createElement(WeekNumber_1.default, { number: props.weekNumber, dates: props.dates })))),
        props.dates.map((date) => (react_1.default.createElement("td", { className: classNames.cell, style: styles.cell, key: (0, date_fns_1.getUnixTime)(date) },
            react_1.default.createElement(DayButton_1.default, { displayMonth: props.displayMonth, date: date }))))));
}
exports.default = Row;
//# sourceMappingURL=Row.js.map