"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
/* https://github.com/gpbl/react-day-picker/blob/7f78cd5/src/components/WeekNumber/WeekNumber.tsx#L21 */
const react_1 = __importDefault(require("react"));
const react_day_picker_1 = require("react-day-picker");
const labels_1 = require("../../utils/labels");
/**
 * https://github.com/gpbl/react-day-picker/tree/main/src/components/WeekNumber
 */
function WeekNumber(props) {
    const { number: weekNumber, dates } = props;
    const { onWeekNumberClick, styles, classNames, locale: { code }, } = (0, react_day_picker_1.useDayPicker)();
    const weekLabel = (0, labels_1.labelWeekNumber)({
        week: Number(weekNumber),
        localeCode: code,
    });
    if (!onWeekNumberClick) {
        return (react_1.default.createElement("span", { className: classNames.weeknumber, style: styles.weeknumber, "aria-label": weekLabel }, weekNumber));
    }
    const label = (0, labels_1.labelWeekNumberButton)({
        week: Number(weekNumber),
        localeCode: code,
    });
    const handleClick = function (e) {
        onWeekNumberClick(weekNumber, dates, e);
    };
    if (props === null || props === void 0 ? void 0 : props.headerVersion) {
        return (react_1.default.createElement(react_day_picker_1.Button, { name: "week-number", "aria-label": label, className: classNames.weeknumber, style: styles.weeknumber, onClick: handleClick }, weekNumber));
    }
    return (react_1.default.createElement(react_day_picker_1.Button, { name: "week-number", "aria-label": label, className: classNames.weeknumber, style: styles.weeknumber, onClick: handleClick }, weekNumber));
}
exports.default = WeekNumber;
//# sourceMappingURL=WeekNumber.js.map