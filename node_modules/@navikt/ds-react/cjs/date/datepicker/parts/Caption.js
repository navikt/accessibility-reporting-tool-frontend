"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DatePickerCaption = void 0;
const react_1 = __importDefault(require("react"));
const react_day_picker_1 = require("react-day-picker");
const aksel_icons_1 = require("@navikt/aksel-icons");
const button_1 = require("../../../button");
const typography_1 = require("../../../typography");
const WeekRow_1 = __importDefault(require("./WeekRow"));
/**
 * https://github.com/gpbl/react-day-picker/tree/main/src/components/Caption
 */
const DatePickerCaption = ({ displayMonth, id }) => {
    const { goToMonth, nextMonth, previousMonth } = (0, react_day_picker_1.useNavigation)();
    const { labels: { labelPrevious, labelNext }, formatters: { formatCaption }, locale, } = (0, react_day_picker_1.useDayPicker)();
    const previousLabel = labelPrevious(previousMonth, { locale });
    const nextLabel = labelNext(nextMonth, { locale });
    return (react_1.default.createElement(react_1.default.Fragment, null,
        react_1.default.createElement("div", { className: "navds-date__caption" },
            react_1.default.createElement(button_1.Button, { variant: "tertiary", disabled: !previousMonth, onClick: () => previousMonth && goToMonth(previousMonth), icon: react_1.default.createElement(aksel_icons_1.ArrowLeftIcon, { title: previousLabel }), className: "navds-date__caption-button", type: "button" }),
            react_1.default.createElement(typography_1.Label, { as: "span", "aria-live": "polite", "aria-atomic": "true", id: id, className: "navds-date__caption-label" }, formatCaption(displayMonth, { locale })),
            react_1.default.createElement(button_1.Button, { icon: react_1.default.createElement(aksel_icons_1.ArrowRightIcon, { title: nextLabel }), onClick: () => nextMonth && goToMonth(nextMonth), disabled: !nextMonth, variant: "tertiary", className: "navds-date__caption-button", type: "button" })),
        react_1.default.createElement(WeekRow_1.default, { displayMonth: displayMonth })));
};
exports.DatePickerCaption = DatePickerCaption;
exports.default = exports.DatePickerCaption;
//# sourceMappingURL=Caption.js.map