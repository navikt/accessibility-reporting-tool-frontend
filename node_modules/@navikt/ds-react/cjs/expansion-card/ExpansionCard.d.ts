import React from "react";
import { OverridableComponent } from "../util/types";
import { ExpansionCardContentProps } from "./ExpansionCardContent";
import { ExpansionCardDescriptionProps } from "./ExpansionCardDescription";
import { ExpansionCardHeaderProps } from "./ExpansionCardHeader";
import { ExpansionCardTitleProps } from "./ExpansionCardTitle";
interface ExpansionCardComponent extends React.ForwardRefExoticComponent<ExpansionCardProps & React.RefAttributes<HTMLDivElement>> {
    /**
     * @see üè∑Ô∏è {@link ExpansionCardHeaderProps}
     */
    Header: React.ForwardRefExoticComponent<ExpansionCardHeaderProps & React.RefAttributes<HTMLDivElement>>;
    /**
     * @see üè∑Ô∏è {@link ExpansionCardTitleProps}
     * @see [ü§ñ OverridableComponent](https://aksel.nav.no/grunnleggende/kode/overridablecomponent) support
     */
    Title: OverridableComponent<ExpansionCardTitleProps, HTMLHeadingElement>;
    /**
     * @see üè∑Ô∏è {@link ExpansionCardDescriptionProps}
     */
    Description: React.ForwardRefExoticComponent<ExpansionCardDescriptionProps & React.RefAttributes<HTMLParagraphElement>>;
    /**
     * @see üè∑Ô∏è {@link ExpansionCardContentProps}
     */
    Content: React.ForwardRefExoticComponent<ExpansionCardContentProps & React.RefAttributes<HTMLDivElement>>;
}
interface ExpansionCardCommonProps extends React.HTMLAttributes<HTMLDivElement> {
    children: React.ReactNode;
    /**
     * Callback for when Card is toggled open/closed
     */
    onToggle?: (open: boolean) => void;
    /**
     * Controlled open-state
     * Using this removes automatic control of open-state
     */
    open?: boolean;
    /**
     * Defaults to open if not controlled
     * @default false
     */
    defaultOpen?: boolean;
    /**
     * @default "medium"
     */
    size?: "medium" | "small";
}
type ExpansionCardConditionalProps = {
    /**
     * Should be set if not using 'aria-labelledby'
     */
    "aria-label": string;
} | {
    /**
     * Should be set if not using 'aria-label'
     */
    "aria-labelledby": string;
};
export type ExpansionCardProps = ExpansionCardCommonProps & ExpansionCardConditionalProps;
/**
 * A component that displays an expandable card.
 *
 * @see [üìù Documentation](https://aksel.nav.no/komponenter/core/expansioncard)
 * @see üè∑Ô∏è {@link ExpansionCardProps}
 *
 * @example
 * ```jsx
 * <ExpansionCard aria-label="default-demo">
 *   <ExpansionCard.Header>
 *     <ExpansionCard.Title>Utbetaling av sykepenger</ExpansionCard.Title>
 *   </ExpansionCard.Header>
 *   <ExpansionCard.Content>
 *     <Innhold />
 *   </ExpansionCard.Content>
 * </ExpansionCard>
 * ```
 */
export declare const ExpansionCard: ExpansionCardComponent;
export default ExpansionCard;
