"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.createDescendantContext = void 0;
/**
 * https://github.com/chakra-ui/chakra-ui/tree/5ec0be610b5a69afba01a9c22365155c1b519136/packages/components/descendant
 */
const react_1 = __importStar(require("react"));
const create_context_1 = require("../../create-context");
const useClientLayoutEffect_1 = require("../useClientLayoutEffect");
const useMergeRefs_1 = require("../useMergeRefs");
const descendant_1 = require("./descendant");
const utils_1 = require("./utils");
/**
 * Provides strongly typed versions of the context provider and hooks above.
 */
function createDescendantContext() {
    const [DescendantsContextProvider, useDescendantsContext] = (0, create_context_1.createContext)({
        name: "DescendantsProvider",
        errorMessage: "useDescendantsContext must be used within DescendantsProvider",
    });
    const ContextProvider = (0, utils_1.cast)((props) => (react_1.default.createElement(DescendantsContextProvider, Object.assign({}, props.value), props.children)));
    /**
     * @internal
     * This hook provides information to descendant component:
     * - Index compared to other descendants
     * - ref callback to register the descendant
     * - Its enabled index compared to other enabled descendants
     */
    function _useDescendant(options) {
        const descendants = useDescendantsContext();
        const [index, setIndex] = (0, react_1.useState)(-1);
        const ref = (0, react_1.useRef)(null);
        (0, useClientLayoutEffect_1.useClientLayoutEffect)(() => {
            return () => {
                if (!ref.current)
                    return;
                descendants.unregister(ref.current);
            };
        }, []);
        (0, useClientLayoutEffect_1.useClientLayoutEffect)(() => {
            if (!ref.current)
                return;
            const dataIndex = Number(ref.current.dataset["index"]);
            if (index != dataIndex && !Number.isNaN(dataIndex)) {
                setIndex(dataIndex);
            }
        });
        const refCallback = options
            ? (0, utils_1.cast)(descendants.register(options))
            : (0, utils_1.cast)(descendants.register);
        return {
            descendants,
            index,
            enabledIndex: descendants.enabledIndexOf(ref.current),
            register: (0, useMergeRefs_1.mergeRefs)([refCallback, ref]),
        };
    }
    /**
     * @internal
     * Initializing DescendantsManager
     */
    function _useDescendants() {
        const descendants = (0, react_1.useRef)(new descendant_1.DescendantsManager()).current;
        return descendants;
    }
    return [
        // context provider
        ContextProvider,
        // call this when you need to read from context
        useDescendantsContext,
        // descendants state information, to be called and passed to `ContextProvider`
        _useDescendants,
        // descendant index information
        _useDescendant,
    ];
}
exports.createDescendantContext = createDescendantContext;
//# sourceMappingURL=useDescendant.js.map