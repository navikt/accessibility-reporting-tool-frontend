"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.useMergeRefs = exports.mergeRefs = void 0;
/* https://github.com/radix-ui/primitives/blob/main/packages/react/compose-refs/src/composeRefs.tsx */
const react_1 = __importDefault(require("react"));
// https://github.com/gregberge/react-merge-refs
/**
 * Use `useMergeRefs`
 * @internal
 */
function mergeRefs(refs) {
    return (value) => {
        refs.forEach((ref) => {
            if (typeof ref === "function") {
                ref(value);
            }
            else if (ref !== null && ref !== undefined) {
                ref.current = value;
            }
        });
    };
}
exports.mergeRefs = mergeRefs;
/**
 * Merges refs within useCallback
 * @internal
 * @param ...refs: React.Ref<T> | undefined
 * @returns React.useCallback(mergeRefs(refs), refs)
 */
function useMergeRefs(...refs) {
    // eslint-disable-next-line react-hooks/exhaustive-deps
    return react_1.default.useCallback(mergeRefs(refs), refs);
}
exports.useMergeRefs = useMergeRefs;
//# sourceMappingURL=useMergeRefs.js.map