"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.useI18n = exports.I18nContext = void 0;
const react_1 = require("react");
const get_1 = require("./get");
const nb_1 = __importDefault(require("./locales/nb"));
/**
 * https://regex101.com/r/LYKWi3/1
 */
const REPLACE_REGEX = /{[^}]*}/g;
exports.I18nContext = (0, react_1.createContext)(nb_1.default);
function useI18n(componentName, ...local) {
    const i18n = (0, react_1.useContext)(exports.I18nContext);
    /**
     * https://github.com/Shopify/polaris/blob/2115f9ba2f5bcbf2ad15745233501bff2db81ecf/polaris-react/src/utilities/i18n/I18n.ts#L24
     */
    const translate = (keypath, options) => {
        const text = (0, get_1.get)(keypath, ...local, ...(Array.isArray(i18n)
            ? i18n.map((t) => t[componentName])
            : [i18n[componentName]]));
        if (options === null || options === void 0 ? void 0 : options.replacements) {
            return text.replace(REPLACE_REGEX, (match) => {
                const replacement = match.substring(1, match.length - 1);
                if (options.replacements[replacement] === undefined) {
                    const replacementData = JSON.stringify(options.replacements);
                    throw new Error(`Error translating key '${keypath}'. No replacement syntax ({}) found for key '${replacement}'. The following replacements were passed: '${replacementData}'`);
                }
                return options.replacements[replacement]; // can also be a number, but JS doesn't mind...
            });
        }
        return text;
    };
    return translate;
}
exports.useI18n = useI18n;
//# sourceMappingURL=i18n.context.js.map