"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Pin = void 0;
const react_1 = require("@floating-ui/react");
const date_fns_1 = require("date-fns");
const react_2 = __importStar(require("react"));
const useMergeRefs_1 = require("../util/hooks/useMergeRefs");
const useTimelineContext_1 = require("./hooks/useTimelineContext");
const calc_1 = require("./utils/calc");
exports.Pin = (0, react_2.forwardRef)((_a, ref) => {
    var { date, children } = _a, rest = __rest(_a, ["date", "children"]);
    const { startDate, endDate, direction } = (0, useTimelineContext_1.useTimelineContext)();
    const [open, setOpen] = (0, react_2.useState)(false);
    const arrowRef = (0, react_2.useRef)(null);
    const { context, placement, middlewareData: { arrow: { x: arrowX, y: arrowY } = {} }, refs, floatingStyles, } = (0, react_1.useFloating)({
        placement: "top",
        open,
        onOpenChange: (_open) => setOpen(_open),
        whileElementsMounted: react_1.autoUpdate,
        middleware: [
            (0, react_1.offset)(16),
            (0, react_1.shift)(),
            (0, react_1.flip)({ padding: 5, fallbackPlacements: ["bottom", "top"] }),
            (0, react_1.arrow)({ element: arrowRef, padding: 5 }),
        ],
    });
    const hover = (0, react_1.useHover)(context, {
        handleClose: (0, react_1.safePolygon)(),
        restMs: 25,
        delay: { open: 1000 },
        move: false,
    });
    const focus = (0, react_1.useFocus)(context);
    const dismiss = (0, react_1.useDismiss)(context);
    const role = (0, react_1.useRole)(context, { role: "dialog" });
    const { getFloatingProps, getReferenceProps } = (0, react_1.useInteractions)([
        hover,
        focus,
        dismiss,
        role,
    ]);
    const mergedRef = (0, useMergeRefs_1.useMergeRefs)(refs.setReference, ref);
    const staticSide = {
        top: "bottom",
        right: "left",
        bottom: "top",
        left: "right",
    }[placement.split("-")[0]];
    return (react_2.default.createElement(react_2.default.Fragment, null,
        react_2.default.createElement("div", { className: "navds-timeline__pin-wrapper", style: { [direction]: `${(0, calc_1.position)(date, startDate, endDate)}%` } },
            react_2.default.createElement("button", Object.assign({}, rest, { ref: mergedRef, className: "navds-timeline__pin-button", "aria-label": `pin:${(0, date_fns_1.format)(date, "dd.MM.yyyy")}`, type: "button", "aria-expanded": children ? open : undefined }, getReferenceProps({
                onKeyDown: (e) => {
                    var _a;
                    (_a = rest === null || rest === void 0 ? void 0 : rest.onKeyDown) === null || _a === void 0 ? void 0 : _a.call(rest, e);
                    if (e.key === "Enter") {
                        setOpen((prev) => !prev);
                    }
                    else if (e.key === " ") {
                        setOpen(false);
                    }
                },
            })))),
        children && open && (react_2.default.createElement(react_1.FloatingFocusManager, { context: context, modal: false, initialFocus: -1, returnFocus: false },
            react_2.default.createElement("div", Object.assign({ className: "navds-timeline__popover", "data-placement": placement, ref: refs.setFloating }, getFloatingProps(), { tabIndex: undefined, style: floatingStyles }),
                children,
                react_2.default.createElement("div", { ref: arrowRef, style: Object.assign(Object.assign(Object.assign({}, (arrowX != null ? { left: arrowX } : {})), (arrowY != null ? { top: arrowY } : {})), (staticSide ? { [staticSide]: "-0.5rem" } : {})), className: "navds-timeline__popover-arrow" }))))));
});
exports.Pin.componentType = "pin";
exports.default = exports.Pin;
//# sourceMappingURL=Pin.js.map