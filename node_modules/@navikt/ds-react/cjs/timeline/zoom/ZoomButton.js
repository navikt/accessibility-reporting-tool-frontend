"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ZoomButton = void 0;
const date_fns_1 = require("date-fns");
const react_1 = __importStar(require("react"));
const Detail_1 = require("../../typography/Detail");
const useTimelineContext_1 = require("../hooks/useTimelineContext");
exports.ZoomButton = (0, react_1.forwardRef)((_a, ref) => {
    var { label, interval, count } = _a, rest = __rest(_a, ["label", "interval", "count"]);
    const { setStart, endDate, startDate, direction } = (0, useTimelineContext_1.useTimelineContext)();
    let startOfRange;
    if (interval === "month") {
        startOfRange =
            direction === "left"
                ? (0, date_fns_1.subMonths)(endDate, count)
                : (0, date_fns_1.addMonths)(startDate, count);
    }
    else {
        startOfRange =
            direction === "left"
                ? (0, date_fns_1.subYears)(endDate, count)
                : (0, date_fns_1.addYears)(startDate, count);
    }
    const currentZoom = direction === "left"
        ? (0, date_fns_1.isSameDay)(startDate, startOfRange)
        : (0, date_fns_1.isSameDay)(endDate, startOfRange);
    return (react_1.default.createElement(Detail_1.Detail, { as: "li" },
        react_1.default.createElement("button", Object.assign({ type: "button", "aria-label": !currentZoom
                ? `Zoom tidslinjen ${(0, date_fns_1.format)(startOfRange, "dd.MM.yyyy")} til ${(0, date_fns_1.format)(endDate, "dd.MM.yyyy")}`
                : "Tilbakestill til initiell tidsperspektiv", ref: ref }, rest, { className: "navds-timeline__zoom-button", onClick: () => {
                setStart(startOfRange);
            }, "aria-pressed": currentZoom }), label)));
});
exports.default = exports.ZoomButton;
//# sourceMappingURL=ZoomButton.js.map