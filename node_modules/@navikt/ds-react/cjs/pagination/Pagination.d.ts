import React from "react";
import { PaginationItemProps, PaginationItemType } from "./PaginationItem";
export interface PaginationProps extends React.HTMLAttributes<HTMLElement> {
    /**
     * Current page.
     *
     * Pagination indexing starts at 1.
     */
    page: number;
    /**
     * Number of always visible pages before and after the current page.
     * @default 1
     */
    siblingCount?: number;
    /**
     * Number of always visible pages at the beginning and end.
     * @default 1
     */
    boundaryCount?: number;
    /**
     * Callback when current page changes
     */
    onPageChange?: (page: number) => void;
    /**
     * Total number of pages
     */
    count: number;
    /**
     * Changes padding, height and font-size
     * @default "medium"
     */
    size?: "medium" | "small" | "xsmall";
    /**
     * Display text alongside "previous" and "next" icons
     * @default false
     */
    prevNextTexts?: boolean;
    /**
     * Override pagination item rendering
     * @default (item: PaginationItemProps) => <PaginationItem {...item} />
     */
    renderItem?: (item: PaginationItemProps) => ReturnType<React.FC>;
}
interface PaginationType extends React.ForwardRefExoticComponent<PaginationProps & React.RefAttributes<HTMLElement>> {
    Item: PaginationItemType;
}
export declare const getSteps: ({ page, count, boundaryCount, siblingCount, }: {
    page: any;
    count: any;
    boundaryCount?: number | undefined;
    siblingCount?: number | undefined;
}) => (string | number)[];
/**
 * A component that displays pagination controls.
 *
 * @see [üìù Documentation](https://aksel.nav.no/komponenter/core/pagination)
 * @see üè∑Ô∏è {@link PaginationProps}
 *
 * @example
 * ```jsx
 * <Pagination
 *   page={pageState}
 *   onPageChange={(x) => setPageState(x)}
 *   count={9}
 *   boundaryCount={1}
 *   siblingCount={1}
 * />
 * ```
 */
export declare const Pagination: PaginationType;
export default Pagination;
