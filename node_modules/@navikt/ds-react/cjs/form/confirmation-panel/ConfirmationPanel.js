"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConfirmationPanel = void 0;
const clsx_1 = __importDefault(require("clsx"));
const react_1 = __importStar(require("react"));
const typography_1 = require("../../typography");
const hooks_1 = require("../../util/hooks");
const checkbox_1 = require("../checkbox");
const useFormField_1 = require("../useFormField");
/**
 * A component that displays a confirmation checkbox with a label.
 *
 * @see [üìù Documentation](https://aksel.nav.no/komponenter/core/confirmationpanel)
 * @see üè∑Ô∏è {@link ConfirmationPanelProps}
 *
 * @example
 * ```jsx
      <ConfirmationPanel
        checked={state}
        label="Ja, jeg samtykker."
        onChange={() => setState((x) => !x)}
      >
        For √• komme videre m√• du gi oss lov til √• hente inn og bruke opplysninger
        om deg.
      </ConfirmationPanel>
 * ```
 */
exports.ConfirmationPanel = (0, react_1.forwardRef)((_a, ref) => {
    var { className, children, label } = _a, props = __rest(_a, ["className", "children", "label"]);
    const { errorId, showErrorMsg, hasError, size, inputProps } = (0, useFormField_1.useFormField)(props, "confirmation-panel");
    const id = (0, hooks_1.useId)();
    return (react_1.default.createElement("div", { className: (0, clsx_1.default)("navds-confirmation-panel", "navds-form-field", className, {
            "navds-confirmation-panel--small": size === "small",
            "navds-confirmation-panel--error": hasError,
            "navds-confirmation-panel--checked": !!props.checked,
        }) },
        react_1.default.createElement("div", { className: "navds-confirmation-panel__inner" },
            children && (react_1.default.createElement(typography_1.BodyLong, { size: props.size, className: "navds-confirmation-panel__content", id: `confirmation-panel-${id}`, as: "div" }, children)),
            react_1.default.createElement(checkbox_1.Checkbox, Object.assign({ ref: ref }, props, inputProps, { "aria-describedby": (0, clsx_1.default)(inputProps["aria-describedby"], children && `confirmation-panel-${id}`), error: hasError, size: size }), label)),
        react_1.default.createElement("div", { className: "navds-form-field__error", id: errorId, role: "alert" }, showErrorMsg && react_1.default.createElement(typography_1.ErrorMessage, { size: size }, props.error))));
});
exports.default = exports.ConfirmationPanel;
//# sourceMappingURL=ConfirmationPanel.js.map