"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Search = void 0;
const clsx_1 = __importDefault(require("clsx"));
const react_1 = __importStar(require("react"));
const aksel_icons_1 = require("@navikt/aksel-icons");
const typography_1 = require("../../typography");
const util_1 = require("../../util");
const useMergeRefs_1 = require("../../util/hooks/useMergeRefs");
const useFormField_1 = require("../useFormField");
const SearchButton_1 = __importDefault(require("./SearchButton"));
const context_1 = require("./context");
/**
 * A component that displays a search input field.
 *
 * @see [📝 Documentation](https://aksel.nav.no/komponenter/core/search)
 * @see 🏷️ {@link SearchProps}
 *
 * @example
 * ```jsx
 * <form role="search">
 *   <Search label="Søk alle NAV sine sider" variant="primary" />
 * </form>
 * ```
 */
exports.Search = (0, react_1.forwardRef)((props, ref) => {
    const { inputProps, size = "medium", inputDescriptionId, errorId, showErrorMsg, hasError, } = (0, useFormField_1.useFormField)(props, "searchfield");
    const { className, hideLabel = true, label, description, value, clearButtonLabel, onClear, clearButton = true, children, variant = "primary", defaultValue, onChange, onSearchClick, htmlSize, role } = props, rest = __rest(props, ["className", "hideLabel", "label", "description", "value", "clearButtonLabel", "onClear", "clearButton", "children", "variant", "defaultValue", "onChange", "onSearchClick", "htmlSize", "role"]);
    const searchRef = (0, react_1.useRef)(null);
    const mergedRef = (0, useMergeRefs_1.useMergeRefs)(searchRef, ref);
    const [internalValue, setInternalValue] = (0, react_1.useState)(defaultValue !== null && defaultValue !== void 0 ? defaultValue : "");
    const handleChange = (0, react_1.useCallback)((v) => {
        value === undefined && setInternalValue(v);
        onChange === null || onChange === void 0 ? void 0 : onChange(v);
    }, [onChange, value]);
    const handleClear = (0, react_1.useCallback)((event) => {
        var _a, _b;
        onClear === null || onClear === void 0 ? void 0 : onClear(event);
        handleChange("");
        searchRef.current && ((_b = (_a = searchRef.current) === null || _a === void 0 ? void 0 : _a.focus) === null || _b === void 0 ? void 0 : _b.call(_a));
    }, [handleChange, onClear]);
    const handleClick = () => {
        onSearchClick === null || onSearchClick === void 0 ? void 0 : onSearchClick(`${value !== null && value !== void 0 ? value : internalValue}`);
    };
    return (
    // eslint-disable-next-line jsx-a11y/no-static-element-interactions
    react_1.default.createElement("div", { onKeyDown: (e) => {
            var _a, _b;
            if (e.key !== "Escape") {
                return;
            }
            ((_a = searchRef.current) === null || _a === void 0 ? void 0 : _a.value) &&
                ((_b = searchRef.current) === null || _b === void 0 ? void 0 : _b.value) !== "" &&
                e.preventDefault();
            handleClear({ trigger: "Escape", event: e });
        }, className: (0, clsx_1.default)(className, "navds-form-field", `navds-form-field--${size}`, "navds-search", {
            "navds-search--error": hasError,
            "navds-search--disabled": !!inputProps.disabled,
            "navds-search--with-size": !!htmlSize,
        }) },
        react_1.default.createElement(typography_1.Label, { htmlFor: inputProps.id, size: size, className: (0, clsx_1.default)("navds-form-field__label", {
                "navds-sr-only": hideLabel,
            }) }, label),
        !!description && (react_1.default.createElement(typography_1.BodyShort, { className: (0, clsx_1.default)("navds-form-field__description", {
                "navds-sr-only": hideLabel,
            }), id: inputDescriptionId, size: size, as: "div" }, description)),
        react_1.default.createElement("div", { className: "navds-search__wrapper" },
            react_1.default.createElement("div", { className: "navds-search__wrapper-inner" },
                variant === "simple" && (react_1.default.createElement(aksel_icons_1.MagnifyingGlassIcon, { "aria-hidden": true, className: "navds-search__search-icon" })),
                react_1.default.createElement("input", Object.assign({ ref: mergedRef }, (0, util_1.omit)(rest, ["error", "errorId", "size", "readOnly"]), inputProps, { value: value !== null && value !== void 0 ? value : internalValue, onChange: (e) => handleChange(e.target.value), type: "search", role: role !== null && role !== void 0 ? role : "searchbox", className: (0, clsx_1.default)(className, "navds-search__input", `navds-search__input--${variant}`, "navds-text-field__input", "navds-body-short", `navds-body-short--${size}`) }, (htmlSize ? { size: Number(htmlSize) } : {}))),
                (value !== null && value !== void 0 ? value : internalValue) && clearButton && (react_1.default.createElement("button", { type: "button", onClick: (e) => handleClear({ trigger: "Click", event: e }), className: "navds-search__button-clear" },
                    react_1.default.createElement("span", { className: "navds-sr-only" }, clearButtonLabel ? clearButtonLabel : "Tøm"),
                    react_1.default.createElement(aksel_icons_1.XMarkIcon, { "aria-hidden": true })))),
            react_1.default.createElement(context_1.SearchContext.Provider, { value: {
                    size,
                    disabled: inputProps.disabled,
                    variant,
                    handleClick,
                } }, children ? children : variant !== "simple" && react_1.default.createElement(SearchButton_1.default, null))),
        react_1.default.createElement("div", { className: "navds-form-field__error", id: errorId, "aria-relevant": "additions removals", "aria-live": "polite" }, showErrorMsg && (react_1.default.createElement(typography_1.ErrorMessage, { size: size }, props.error)))));
});
exports.Search.Button = SearchButton_1.default;
exports.default = exports.Search;
//# sourceMappingURL=Search.js.map