"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Switch = void 0;
const clsx_1 = __importDefault(require("clsx"));
const react_1 = __importStar(require("react"));
const loader_1 = require("../../loader");
const typography_1 = require("../../typography");
const util_1 = require("../../util");
const ReadOnlyIcon_1 = require("../ReadOnlyIcon");
const useFormField_1 = require("../useFormField");
const SelectedIcon = () => (react_1.default.createElement("svg", { width: "12", height: "10", viewBox: "0 0 12 10", fill: "none", xmlns: "http://www.w3.org/2000/svg", focusable: false, role: "img", "aria-hidden": true, "aria-label": "Deaktiver valg" },
    react_1.default.createElement("path", { fillRule: "evenodd", clipRule: "evenodd", d: "M11.2674 0.647802C11.8762 1.20971 11.9141 2.1587 11.3522 2.76743L5.35221 9.26743C5.07531 9.56739 4.68813 9.74155 4.27998 9.74971C3.87184 9.75787 3.478 9.59933 3.18934 9.31067L0.68934 6.81067C0.103553 6.22488 0.103553 5.27513 0.68934 4.68935C1.27513 4.10356 2.22487 4.10356 2.81066 4.68935L4.20673 6.08541L9.14779 0.732587C9.7097 0.123856 10.6587 0.0858967 11.2674 0.647802Z", fill: "currentColor" })));
/**
 * A component that displays a switch input field.
 *
 * @see [üìù Documentation](https://aksel.nav.no/komponenter/core/switch)
 * @see üè∑Ô∏è {@link SwitchProps}
 *
 * @example
 * ```jsx
 * <Switch>Varsle med SMS</Switch>
 * ```
 */
exports.Switch = (0, react_1.forwardRef)((props, ref) => {
    var _a, _b, _c;
    const { inputProps, size, readOnly } = (0, useFormField_1.useFormField)(props, "switch");
    const { children, className, description, hideLabel = false, loading, checked: checkedProp, defaultChecked, position = "left" } = props, rest = __rest(props, ["children", "className", "description", "hideLabel", "loading", "checked", "defaultChecked", "position"]);
    const [_checked, setChecked] = (0, react_1.useState)((_a = defaultChecked !== null && defaultChecked !== void 0 ? defaultChecked : checkedProp) !== null && _a !== void 0 ? _a : false);
    (0, react_1.useEffect)(() => {
        checkedProp !== undefined && setChecked(checkedProp);
    }, [checkedProp]);
    const checked = checkedProp !== null && checkedProp !== void 0 ? checkedProp : _checked;
    return (react_1.default.createElement("div", { className: (0, clsx_1.default)("navds-switch", props.className, `navds-switch--${size}`, `navds-switch--${position}`, {
            "navds-switch--loading": loading,
            "navds-switch--disabled": (_b = inputProps.disabled) !== null && _b !== void 0 ? _b : loading,
            "navds-switch--readonly": readOnly,
        }) },
        react_1.default.createElement("input", Object.assign({}, (0, util_1.omit)(rest, ["size", "readOnly"]), (0, util_1.omit)(inputProps, ["aria-invalid", "aria-describedby"]), { disabled: (_c = inputProps.disabled) !== null && _c !== void 0 ? _c : loading, checked: checkedProp, defaultChecked: defaultChecked, ref: ref, type: "checkbox", onChange: (e) => {
                if (readOnly) {
                    return;
                }
                setChecked(e.target.checked);
                props.onChange && props.onChange(e);
            }, onClick: (e) => {
                var _a;
                if (readOnly) {
                    e.preventDefault();
                    return;
                }
                (_a = props === null || props === void 0 ? void 0 : props.onClick) === null || _a === void 0 ? void 0 : _a.call(props, e);
            }, className: (0, clsx_1.default)(className, "navds-switch__input") })),
        react_1.default.createElement("span", { className: "navds-switch__track" },
            react_1.default.createElement("span", { className: "navds-switch__thumb" }, loading ? (react_1.default.createElement(loader_1.Loader, { size: "xsmall", "aria-live": "polite", variant: checked ? "interaction" : "neutral" })) : checked ? (react_1.default.createElement(SelectedIcon, null)) : null)),
        react_1.default.createElement("label", { htmlFor: inputProps.id, className: "navds-switch__label-wrapper" },
            react_1.default.createElement("div", { className: (0, clsx_1.default)("navds-switch__content", {
                    "navds-sr-only": hideLabel,
                    "navds-switch--with-description": !!description && !hideLabel,
                }) },
                react_1.default.createElement(typography_1.BodyShort, { as: "div", size: size, className: "navds-switch__label" },
                    react_1.default.createElement(ReadOnlyIcon_1.ReadOnlyIcon, { readOnly: readOnly, nativeReadOnly: false }),
                    children),
                description && (react_1.default.createElement(typography_1.BodyShort, { size: size, as: "div", className: "navds-form-field__subdescription navds-switch__description" }, description))))));
});
exports.default = exports.Switch;
//# sourceMappingURL=Switch.js.map