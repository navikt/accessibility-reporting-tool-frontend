"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const clsx_1 = __importDefault(require("clsx"));
const react_1 = __importStar(require("react"));
const typography_1 = require("../../typography");
const debounce_1 = __importDefault(require("../../util/debounce"));
const TextareaCounter = ({ maxLength, currentLength, size, i18n }) => {
    const difference = maxLength - currentLength;
    const [debouncedDiff, setDebouncedDiff] = (0, react_1.useState)(difference);
    (0, react_1.useEffect)(() => {
        const debounceFunc = (0, debounce_1.default)(() => {
            setDebouncedDiff(difference);
        }, 2000);
        debounceFunc();
        return () => {
            debounceFunc.clear();
        };
    }, [difference]);
    return (react_1.default.createElement(react_1.default.Fragment, null,
        difference < 20 && (react_1.default.createElement("span", { role: "status", className: "navds-textarea__sr-counter navds-sr-only" }, getCounterText(debouncedDiff, i18n))),
        react_1.default.createElement(typography_1.BodyShort, { className: (0, clsx_1.default)("navds-textarea__counter", {
                "navds-textarea__counter--error": difference < 0,
            }), size: size }, getCounterText(difference, i18n))));
};
const getCounterText = (difference, i18n) => {
    var _a, _b;
    return difference < 0
        ? `${Math.abs(difference)} ${(_a = i18n === null || i18n === void 0 ? void 0 : i18n.counterTooMuch) !== null && _a !== void 0 ? _a : "tegn for mye"}`
        : `${difference} ${(_b = i18n === null || i18n === void 0 ? void 0 : i18n.counterLeft) !== null && _b !== void 0 ? _b : "tegn igjen"}`;
};
exports.default = TextareaCounter;
//# sourceMappingURL=TextareaCounter.js.map