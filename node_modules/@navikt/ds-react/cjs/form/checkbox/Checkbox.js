"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Checkbox = void 0;
const clsx_1 = __importDefault(require("clsx"));
const react_1 = __importStar(require("react"));
const typography_1 = require("../../typography");
const util_1 = require("../../util");
const hooks_1 = require("../../util/hooks");
const ReadOnlyIcon_1 = require("../ReadOnlyIcon");
const useCheckbox_1 = __importDefault(require("./useCheckbox"));
exports.Checkbox = (0, react_1.forwardRef)((props, ref) => {
    const { inputProps, hasError, size, readOnly, nested } = (0, useCheckbox_1.default)(props);
    const labelId = (0, hooks_1.useId)();
    const descriptionId = (0, hooks_1.useId)();
    return (react_1.default.createElement("div", { className: (0, clsx_1.default)(props.className, "navds-checkbox", `navds-checkbox--${size}`, {
            "navds-checkbox--error": hasError,
            "navds-checkbox--disabled": inputProps.disabled,
            "navds-checkbox--readonly": readOnly,
        }) },
        react_1.default.createElement("input", Object.assign({}, (0, util_1.omit)(props, [
            "children",
            "size",
            "error",
            "description",
            "hideLabel",
            "indeterminate",
            "errorId",
            "readOnly",
        ]), (0, util_1.omit)(inputProps, ["aria-invalid"]), { type: "checkbox", className: "navds-checkbox__input", "aria-checked": props.indeterminate ? "mixed" : inputProps.checked, ref: (el) => {
                var _a;
                if (el) {
                    el.indeterminate = (_a = props.indeterminate) !== null && _a !== void 0 ? _a : false;
                }
                if (typeof ref === "function") {
                    ref(el);
                }
                else if (ref != null) {
                    ref.current = el;
                }
            }, "aria-labelledby": (0, clsx_1.default)(labelId, !!props["aria-labelledby"] && props["aria-labelledby"], {
                [descriptionId]: props.description,
            }) })),
        react_1.default.createElement("label", { htmlFor: inputProps.id, className: "navds-checkbox__label" },
            react_1.default.createElement("span", { className: "navds-checkbox__icon" },
                react_1.default.createElement("svg", { xmlns: "http://www.w3.org/2000/svg", width: "0.8125rem", height: "0.625rem", viewBox: "0 0 13 10", fill: "none", focusable: false, role: "img", "aria-hidden": true },
                    react_1.default.createElement("path", { d: "M4.03524 6.41478L10.4752 0.404669C11.0792 -0.160351 12.029 -0.130672 12.5955 0.47478C13.162 1.08027 13.1296 2.03007 12.5245 2.59621L5.02111 9.59934C4.74099 9.85904 4.37559 10 4.00025 10C3.60651 10 3.22717 9.84621 2.93914 9.56111L0.439143 7.06111C-0.146381 6.47558 -0.146381 5.52542 0.439143 4.93989C1.02467 4.35437 1.97483 4.35437 2.56036 4.93989L4.03524 6.41478Z", fill: "currentColor" }))),
            react_1.default.createElement("span", { className: (0, clsx_1.default)("navds-checkbox__content", {
                    "navds-sr-only": props.hideLabel,
                }) },
                react_1.default.createElement(typography_1.BodyShort, { as: "span", id: labelId, size: size, className: "navds-checkbox__label-text", "aria-hidden": true },
                    !nested && (react_1.default.createElement(ReadOnlyIcon_1.ReadOnlyIcon, { readOnly: readOnly, nativeReadOnly: false })),
                    props.children),
                props.description && (react_1.default.createElement(typography_1.BodyShort, { as: "span", id: descriptionId, size: size, className: "navds-form-field__subdescription navds-checkbox__description", "aria-hidden": true }, props.description))))));
});
exports.default = exports.Checkbox;
//# sourceMappingURL=Checkbox.js.map