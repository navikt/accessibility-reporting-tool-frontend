"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Button = void 0;
const clsx_1 = __importDefault(require("clsx"));
const react_1 = __importStar(require("react"));
const loader_1 = require("../loader");
const typography_1 = require("../typography");
const util_1 = require("../util");
const composeEventHandlers_1 = require("../util/composeEventHandlers");
const hooks_1 = require("../util/hooks");
const useMergeRefs_1 = require("../util/hooks/useMergeRefs");
/**
 * A button component
 * @see [📝 Documentation](https://aksel.nav.no/komponenter/core/button)
 * @see 🏷️ {@link ButtonProps}
 * @see [🤖 OverridableComponent](https://aksel.nav.no/grunnleggende/kode/overridablecomponent) support
 * @example
 * ```jsx
 * <Button>Klikk meg</Button>
 * ```
 */
exports.Button = (0, react_1.forwardRef)((_a, ref) => {
    var { as: Component = "button", variant = "primary", className, children, size = "medium", loading = false, disabled, style, icon, iconPosition = "left" } = _a, rest = __rest(_a, ["as", "variant", "className", "children", "size", "loading", "disabled", "style", "icon", "iconPosition"]);
    const buttonRef = (0, react_1.useRef)(null);
    const [widthOverride, setWidthOverride] = (0, react_1.useState)();
    const mergedRef = (0, useMergeRefs_1.useMergeRefs)(buttonRef, ref);
    (0, hooks_1.useClientLayoutEffect)(() => {
        if (loading) {
            const requestID = window.requestAnimationFrame(() => {
                var _a, _b;
                setWidthOverride((_b = (_a = buttonRef === null || buttonRef === void 0 ? void 0 : buttonRef.current) === null || _a === void 0 ? void 0 : _a.getBoundingClientRect()) === null || _b === void 0 ? void 0 : _b.width);
            });
            return () => {
                setWidthOverride(undefined);
                cancelAnimationFrame(requestID);
            };
        }
    }, [loading, children]);
    const filterProps = (disabled !== null && disabled !== void 0 ? disabled : widthOverride) ? (0, util_1.omit)(rest, ["href"]) : rest;
    const handleKeyUp = (e) => {
        if (e.key === " " && !disabled && !widthOverride) {
            e.currentTarget.click();
        }
    };
    return (react_1.default.createElement(Component, Object.assign({}, (Component !== "button" ? { role: "button" } : {}), filterProps, { ref: mergedRef, onKeyUp: (0, composeEventHandlers_1.composeEventHandlers)(filterProps.onKeyUp, handleKeyUp), className: (0, clsx_1.default)(className, "navds-button", `navds-button--${variant}`, `navds-button--${size}`, {
            "navds-button--loading": widthOverride,
            "navds-button--icon-only": !!icon && !children,
            "navds-button--disabled": disabled !== null && disabled !== void 0 ? disabled : widthOverride,
        }), style: Object.assign(Object.assign({}, style), { width: widthOverride }), disabled: (disabled !== null && disabled !== void 0 ? disabled : widthOverride) ? true : undefined }), widthOverride ? (react_1.default.createElement(loader_1.Loader, { size: size })) : (react_1.default.createElement(react_1.default.Fragment, null,
        icon && iconPosition === "left" && (react_1.default.createElement("span", { className: "navds-button__icon" }, icon)),
        children && (react_1.default.createElement(typography_1.Label, { as: "span", size: size === "medium" ? "medium" : "small" }, children)),
        icon && iconPosition === "right" && (react_1.default.createElement("span", { className: "navds-button__icon" }, icon))))));
});
exports.default = exports.Button;
//# sourceMappingURL=Button.js.map