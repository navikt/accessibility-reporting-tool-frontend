"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ExpandableRow = void 0;
const clsx_1 = __importDefault(require("clsx"));
const react_1 = __importStar(require("react"));
const aksel_icons_1 = require("@navikt/aksel-icons");
const composeEventHandlers_1 = require("../util/composeEventHandlers");
const hooks_1 = require("../util/hooks");
const useControllableState_1 = require("../util/hooks/useControllableState");
const AnimateHeight_1 = __importDefault(require("./AnimateHeight"));
const DataCell_1 = __importDefault(require("./DataCell"));
const Row_1 = __importDefault(require("./Row"));
exports.ExpandableRow = (0, react_1.forwardRef)((_a, ref) => {
    var { className, children, content, togglePlacement = "left", defaultOpen = false, open, onOpenChange, expansionDisabled = false, expandOnRowClick = false, colSpan = 999, onClick } = _a, rest = __rest(_a, ["className", "children", "content", "togglePlacement", "defaultOpen", "open", "onOpenChange", "expansionDisabled", "expandOnRowClick", "colSpan", "onClick"]);
    const [_open, _setOpen] = (0, useControllableState_1.useControllableState)({
        defaultValue: defaultOpen,
        value: open,
        onChange: onOpenChange,
    });
    const id = (0, hooks_1.useId)();
    const expansionHandler = (e) => {
        _setOpen((x) => !x);
        e.stopPropagation();
    };
    const onRowClick = (e) => !isInteractiveTarget(e.target) && expansionHandler(e);
    const handleRowClick = (e) => {
        !expansionDisabled && expandOnRowClick && onRowClick(e);
    };
    return (react_1.default.createElement(react_1.default.Fragment, null,
        react_1.default.createElement(Row_1.default, Object.assign({}, rest, { ref: ref, className: (0, clsx_1.default)("navds-table__expandable-row", className, {
                "navds-table__expandable-row--open": _open,
                "navds-table__expandable-row--expansion-disabled": expansionDisabled,
                "navds-table__expandable-row--clickable": expandOnRowClick,
            }), onClick: (0, composeEventHandlers_1.composeEventHandlers)(onClick, handleRowClick) }),
            togglePlacement === "right" && children,
            react_1.default.createElement(DataCell_1.default, { className: (0, clsx_1.default)("navds-table__toggle-expand-cell", {
                    "navds-table__toggle-expand-cell--open": _open,
                }) }, !expansionDisabled && (react_1.default.createElement("button", { className: "navds-table__toggle-expand-button", type: "button", "aria-controls": id, "aria-expanded": _open, onClick: expansionHandler },
                react_1.default.createElement(aksel_icons_1.ChevronDownIcon, { className: "navds-table__expandable-icon", title: _open ? "Vis mindre" : "Vis mer" })))),
            togglePlacement === "left" && children),
        react_1.default.createElement("tr", { className: "navds-table__expanded-row", "aria-hidden": !_open, id: id },
            react_1.default.createElement("td", { colSpan: colSpan, className: "navds-table__expanded-row-cell" },
                react_1.default.createElement(AnimateHeight_1.default, { className: "navds-table__expanded-row-collapse", innerClassName: "navds-table__expanded-row-content", height: _open ? "auto" : 0, duration: 250 }, content)))));
});
function isInteractiveTarget(elm) {
    if (elm.nodeName === "TD" || elm.nodeName === "TH" || !elm.parentElement) {
        return false;
    }
    if (["BUTTON", "DETAILS", "LABEL", "SELECT", "TEXTAREA", "INPUT", "A"].includes(elm.nodeName)) {
        return true;
    }
    return isInteractiveTarget(elm.parentElement);
}
exports.default = exports.ExpandableRow;
//# sourceMappingURL=ExpandableRow.js.map