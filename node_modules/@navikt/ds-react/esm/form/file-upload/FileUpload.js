var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import cl from "clsx";
import React, { forwardRef } from "react";
import { FileUploadLocaleContextProvider } from "./FileUpload.context.js";
import Trigger from "./parts/Trigger.js";
import Dropzone from "./parts/dropzone/Dropzone.js";
import Item from "./parts/item/Item.js";
/**
 * A set of components used to upload and display files.
 * @see [📝 Documentation](https://aksel.nav.no/komponenter/core/fileupload)
 * @example Dropzone
 * ```jsx
 *  <FileUpload.Dropzone />
 * ```
 *
 * @example
 * Items
 * ```jsx
 * <VStack gap="4" as="ul">
 *   <FileUpload.Item as="li" file={myFile} />
 *   <FileUpload.Item as="li" file={mySecondFile} />
 * </VStack>
 * ```
 */
export const FileUpload = forwardRef((_a, ref) => {
    var { children, className, translations } = _a, rest = __rest(_a, ["children", "className", "translations"]);
    return (React.createElement(FileUploadLocaleContextProvider, { translations: translations },
        React.createElement("div", Object.assign({ ref: ref }, rest, { className: cl("navds-file-upload", className) }), children)));
});
FileUpload.Dropzone = Dropzone;
FileUpload.Item = Item;
FileUpload.Trigger = Trigger;
export default FileUpload;
//# sourceMappingURL=FileUpload.js.map