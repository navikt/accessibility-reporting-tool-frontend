var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import cl from "clsx";
import React, { forwardRef, useContext } from "react";
import { BodyLong } from "../typography/index.js";
import { ExpansionCardContext } from "./context.js";
export const ExpansionCardDescription = forwardRef((_a, ref) => {
    var { className } = _a, rest = __rest(_a, ["className"]);
    const panelContext = useContext(ExpansionCardContext);
    if (panelContext === null) {
        console.error("<ExpansionCard.Description> has to be used within an <ExpansionCard>");
        return null;
    }
    return (React.createElement(BodyLong, Object.assign({}, rest, { as: "p", ref: ref, className: cl("navds-link-panel__description", className), size: panelContext.size })));
});
export default ExpansionCardDescription;
//# sourceMappingURL=ExpansionCardDescription.js.map