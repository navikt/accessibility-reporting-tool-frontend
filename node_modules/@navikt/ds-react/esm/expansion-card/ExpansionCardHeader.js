var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import cl from "clsx";
import React, { forwardRef, useContext } from "react";
import { ChevronDownIcon } from "@navikt/aksel-icons";
import { ExpansionCardContext } from "./context.js";
const ExpansionCardHeader = forwardRef((_a, ref) => {
    var { children, className } = _a, rest = __rest(_a, ["children", "className"]);
    const panelContext = useContext(ExpansionCardContext);
    if (panelContext === null) {
        console.error("<ExpansionCard.Header> has to be used within an <ExpansionCard>");
        return null;
    }
    return (React.createElement("div", Object.assign({ ref: ref }, rest, { className: cl("navds-expansioncard__header", className) }),
        React.createElement("div", { className: "navds-expansioncard__header-content" }, children),
        React.createElement("button", { className: "navds-expansioncard__header-button", onClick: () => panelContext.toggleOpen(), type: "button", "aria-expanded": panelContext.open },
            React.createElement(ChevronDownIcon, { className: "navds-expansioncard__header-chevron", title: "Vis mer" }))));
});
export default ExpansionCardHeader;
//# sourceMappingURL=ExpansionCardHeader.js.map