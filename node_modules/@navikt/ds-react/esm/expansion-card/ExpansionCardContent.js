var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import cl from "clsx";
import React, { forwardRef, useContext } from "react";
import { BodyLong } from "../typography/index.js";
import { ExpansionCardContext } from "./context.js";
const ExpansionCardContent = forwardRef((_a, ref) => {
    var { children, className } = _a, rest = __rest(_a, ["children", "className"]);
    const panelContext = useContext(ExpansionCardContext);
    if (panelContext === null) {
        console.error("<ExpansionCard.Content> has to be used within an <ExpansionCard>");
        return null;
    }
    return (React.createElement(BodyLong, Object.assign({}, rest, { ref: ref, as: "div", className: cl("navds-expansioncard__content", className, {
            "navds-expansioncard__content--closed": !panelContext.open,
        }), "aria-hidden": !panelContext.open, size: panelContext.size }),
        React.createElement("div", { className: "navds-expansioncard__content-inner" }, children)));
});
export default ExpansionCardContent;
//# sourceMappingURL=ExpansionCardContent.js.map