var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import cl from "clsx";
import React, { forwardRef } from "react";
import { ChevronDownIcon } from "@navikt/aksel-icons";
import { BodyLong } from "../typography/index.js";
import { composeEventHandlers } from "../util/composeEventHandlers.js";
import { useControllableState } from "../util/hooks/useControllableState.js";
/**
 * ReadMore
 * @see [📝 Documentation](https://aksel.nav.no/komponenter/core/read-more)
 * @see 🏷️ {@link ReadMoreProps}
 *
 * @example
 * // Default
 * <ReadMore header="Dette regnes som helsemessige begrensninger">
 *  Med helsemessige begrensninger mener vi funksjonshemming, sykdom...
 * </ReadMore>
 *
 * @example
 * // Litt mindre versjon
 * <ReadMore size="small" header="Dette regnes som helsemessige begrensninger">
 *   Med helsemessige begrensninger mener vi funksjonshemming, sykdom...
 * </ReadMore>
 */
export const ReadMore = forwardRef((_a, ref) => {
    var { className, header, children, open, defaultOpen = false, onClick, size = "medium", onOpenChange } = _a, rest = __rest(_a, ["className", "header", "children", "open", "defaultOpen", "onClick", "size", "onOpenChange"]);
    const [_open, _setOpen] = useControllableState({
        defaultValue: defaultOpen,
        value: open,
        onChange: onOpenChange,
    });
    return (React.createElement("div", { className: cl("navds-read-more", `navds-read-more--${size}`, className, { "navds-read-more--open": _open }) },
        React.createElement("button", Object.assign({}, rest, { ref: ref, type: "button", className: cl("navds-read-more__button", "navds-body-short", {
                "navds-body-short--small": size === "small",
            }), onClick: composeEventHandlers(onClick, () => _setOpen((x) => !x)), "aria-expanded": _open }),
            React.createElement(ChevronDownIcon, { className: "navds-read-more__expand-icon", "aria-hidden": true }),
            React.createElement("span", null, header)),
        React.createElement(BodyLong, { as: "div", "aria-hidden": !_open, className: cl("navds-read-more__content", {
                "navds-read-more__content--closed": !_open,
            }), size: size }, children)));
});
export default ReadMore;
//# sourceMappingURL=ReadMore.js.map