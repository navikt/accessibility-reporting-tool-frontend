var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import cl from "clsx";
import React, { forwardRef, useContext } from "react";
import { BodyLong } from "../typography/index.js";
import { AccordionItemContext } from "./AccordionItem.js";
const AccordionContent = forwardRef((_a, ref) => {
    var { children, className } = _a, rest = __rest(_a, ["children", "className"]);
    const context = useContext(AccordionItemContext);
    if (context === null) {
        console.error("<Accordion.Content> has to be used within an <Accordion.Item>");
        return null;
    }
    return (React.createElement(BodyLong, Object.assign({}, rest, { as: "div", ref: ref, className: cl("navds-accordion__content", {
            "navds-accordion__content--closed": !context.open,
        }, className), "aria-hidden": !context.open || undefined }), children));
});
export default AccordionContent;
//# sourceMappingURL=AccordionContent.js.map