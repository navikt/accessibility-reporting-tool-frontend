var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import cl from "clsx";
import React, { forwardRef, useContext } from "react";
import { BodyShort, Label } from "../typography/index.js";
import { ListContext } from "./context.js";
/**
 * @see 🏷️ {@link ListItemProps}
 */
export const ListItem = forwardRef((_a, ref) => {
    var { className, children, title, icon } = _a, rest = __rest(_a, ["className", "children", "title", "icon"]);
    const { listType, size } = useContext(ListContext);
    if (listType === "ol" && icon) {
        console.warn("<List />: Icon prop is not supported for ordered lists. Please remove the icon prop.");
    }
    return (React.createElement("li", Object.assign({}, rest, { ref: ref, className: cl("navds-list__item", className) }),
        listType === "ul" && (React.createElement("div", { className: cl({
                "navds-list__item-marker--icon": icon,
                "navds-list__item-marker--bullet": !icon,
            }) }, icon ? (icon) : (React.createElement("svg", { width: "6", height: "6", viewBox: "0 0 6 6", fill: "none", xmlns: "http://www.w3.org/2000/svg", "aria-hidden": true, focusable: false, role: "img" },
            React.createElement("rect", { width: "6", height: "6", rx: "3", fill: "currentColor" }))))),
        React.createElement(BodyShort, { as: "div", size: size, className: "navds-list__item-content" },
            title && (React.createElement(Label, { as: "p", size: size }, title)),
            children)));
});
ListItem.displayName = "List.Item";
export default ListItem;
//# sourceMappingURL=ListItem.js.map