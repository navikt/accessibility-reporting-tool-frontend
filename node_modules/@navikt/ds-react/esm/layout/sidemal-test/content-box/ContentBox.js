var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import cl from "clsx";
import React, { forwardRef } from "react";
export const ContentBox = forwardRef((_a, ref) => {
    var { as: Component = "div", className, maxWidth = "xl" } = _a, rest = __rest(_a, ["as", "className", "maxWidth"]);
    const getMaxWidth = () => {
        return maxWidth === "3xl"
            ? "1920px"
            : maxWidth === "2xl"
                ? "1440px"
                : maxWidth === "xl"
                    ? "1280px"
                    : "1024px";
    };
    return (React.createElement(React.Fragment, null,
        React.createElement(Component, Object.assign({}, rest, { ref: ref, style: { "--__ac-contentbox--max-width": getMaxWidth() }, className: cl("navds-contentbox", className) })),
        React.createElement("style", null, `
              .navds-contentbox {
                --__ac-contentbox--max-width: initial;

                margin: 0 auto;
                max-width: var(--__ac-contentbox--max-width);
              }
            `)));
});
export default ContentBox;
//# sourceMappingURL=ContentBox.js.map