var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import cl from "clsx";
import React, { forwardRef } from "react";
import { Slot } from "../../util/Slot.js";
import { getResponsiveProps } from "../utilities/css.js";
/**
 * Foundational Layout-primitive for generic encapsulation & styling.
 *
 * @see [📝 Documentation](https://aksel.nav.no/komponenter/primitives/Bleed)
 * @see 🏷️ {@link BleedProps}
 * @see [🤖 OverridableComponent](https://aksel.nav.no/grunnleggende/kode/overridablecomponent) support
 *
 * @example
 * <Box padding="4">
 *   <Bleed marginInline="4" marginBlock="4">
 *     <BodyLong>Some content</BodyLong>
 *   </Bleed>
 * </Box>
 */
export const Bleed = forwardRef((_a, ref) => {
    var { className, marginInline, marginBlock, reflectivePadding, style: _style, asChild } = _a, rest = __rest(_a, ["className", "marginInline", "marginBlock", "reflectivePadding", "style", "asChild"]);
    let style = Object.assign(Object.assign(Object.assign({}, _style), getResponsiveProps("bleed", "margin-inline", "spacing", marginInline, true, ["0", "full", "px"])), getResponsiveProps("bleed", "margin-block", "spacing", marginBlock, true, ["0", "px"]));
    if (reflectivePadding) {
        style = Object.assign(Object.assign(Object.assign({}, style), getResponsiveProps("bleed", "padding-inline", "spacing", marginInline, false, ["0", "full", "px"])), getResponsiveProps("bleed", "padding-block", "spacing", marginBlock, false, ["0", "px"]));
    }
    const Comp = asChild ? Slot : "div";
    return (React.createElement(Comp, Object.assign({}, rest, { className: cl("navds-bleed", className, {
            "navds-bleed--padding": reflectivePadding,
        }), ref: ref, style: style })));
});
export default Bleed;
//# sourceMappingURL=Bleed.js.map