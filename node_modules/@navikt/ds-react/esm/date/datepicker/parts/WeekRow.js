import React from "react";
import { useDayPicker } from "react-day-picker";
import { Show } from "../../../layout/responsive/index.js";
import { Detail } from "../../../typography/index.js";
import { useId } from "../../../util/hooks/index.js";
import { getMonthWeeks } from "../../utils/get-month-weeks.js";
import { labelWeek } from "../../utils/labels.js";
import WeekNumber from "./WeekNumber.js";
const WeekRow = ({ displayMonth }) => {
    const { locale, fixedWeeks, onWeekNumberClick } = useDayPicker();
    const labelId = useId();
    if (!onWeekNumberClick) {
        return null;
    }
    const weeks = getMonthWeeks(displayMonth, {
        useFixedWeeks: Boolean(fixedWeeks),
        locale,
    });
    return (React.createElement(Show, { below: "sm", asChild: true },
        React.createElement("table", { className: "rdp-table", role: "grid" },
            React.createElement("tbody", { className: "rdp-tbody" },
                React.createElement("tr", { className: "rdp-row navds-date__week-row" },
                    React.createElement(Detail, { as: "th", weight: "semibold", className: "rdp-cell navds-date__week-cell" },
                        React.createElement("span", { className: "navds-date__week-wrapper", id: labelId }, labelWeek(locale === null || locale === void 0 ? void 0 : locale.code))),
                    weeks.map((week) => (React.createElement("td", { key: week.weekNumber, className: "rdp-cell navds-date__week-cell" },
                        React.createElement("span", { className: "navds-date__week-wrapper" },
                            React.createElement(WeekNumber, { number: week.weekNumber, dates: week.dates, headerVersion: true }))))))))));
};
export default WeekRow;
//# sourceMappingURL=WeekRow.js.map