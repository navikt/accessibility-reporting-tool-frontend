/* https://github.com/gpbl/react-day-picker/blob/7f78cd5/src/components/WeekNumber/WeekNumber.tsx#L21 */
import React from "react";
import { Button, useDayPicker } from "react-day-picker";
import { labelWeekNumber, labelWeekNumberButton } from "../../utils/labels.js";
/**
 * https://github.com/gpbl/react-day-picker/tree/main/src/components/WeekNumber
 */
function WeekNumber(props) {
    const { number: weekNumber, dates } = props;
    const { onWeekNumberClick, styles, classNames, locale: { code }, } = useDayPicker();
    const weekLabel = labelWeekNumber({
        week: Number(weekNumber),
        localeCode: code,
    });
    if (!onWeekNumberClick) {
        return (React.createElement("span", { className: classNames.weeknumber, style: styles.weeknumber, "aria-label": weekLabel }, weekNumber));
    }
    const label = labelWeekNumberButton({
        week: Number(weekNumber),
        localeCode: code,
    });
    const handleClick = function (e) {
        onWeekNumberClick(weekNumber, dates, e);
    };
    if (props === null || props === void 0 ? void 0 : props.headerVersion) {
        return (React.createElement(Button, { name: "week-number", "aria-label": label, className: classNames.weeknumber, style: styles.weeknumber, onClick: handleClick }, weekNumber));
    }
    return (React.createElement(Button, { name: "week-number", "aria-label": label, className: classNames.weeknumber, style: styles.weeknumber, onClick: handleClick }, weekNumber));
}
export default WeekNumber;
//# sourceMappingURL=WeekNumber.js.map