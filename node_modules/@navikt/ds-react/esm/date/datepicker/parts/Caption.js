import React from "react";
import { useDayPicker, useNavigation } from "react-day-picker";
import { ArrowLeftIcon, ArrowRightIcon } from "@navikt/aksel-icons";
import { Button } from "../../../button/index.js";
import { Label } from "../../../typography/index.js";
import WeekRow from "./WeekRow.js";
/**
 * https://github.com/gpbl/react-day-picker/tree/main/src/components/Caption
 */
export const DatePickerCaption = ({ displayMonth, id }) => {
    const { goToMonth, nextMonth, previousMonth } = useNavigation();
    const { labels: { labelPrevious, labelNext }, formatters: { formatCaption }, locale, } = useDayPicker();
    const previousLabel = labelPrevious(previousMonth, { locale });
    const nextLabel = labelNext(nextMonth, { locale });
    return (React.createElement(React.Fragment, null,
        React.createElement("div", { className: "navds-date__caption" },
            React.createElement(Button, { variant: "tertiary", disabled: !previousMonth, onClick: () => previousMonth && goToMonth(previousMonth), icon: React.createElement(ArrowLeftIcon, { title: previousLabel }), className: "navds-date__caption-button", type: "button" }),
            React.createElement(Label, { as: "span", "aria-live": "polite", "aria-atomic": "true", id: id, className: "navds-date__caption-label" }, formatCaption(displayMonth, { locale })),
            React.createElement(Button, { icon: React.createElement(ArrowRightIcon, { title: nextLabel }), onClick: () => nextMonth && goToMonth(nextMonth), disabled: !nextMonth, variant: "tertiary", className: "navds-date__caption-button", type: "button" })),
        React.createElement(WeekRow, { displayMonth: displayMonth })));
};
export default DatePickerCaption;
//# sourceMappingURL=Caption.js.map