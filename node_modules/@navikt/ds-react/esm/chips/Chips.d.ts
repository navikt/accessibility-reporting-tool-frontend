import React, { HTMLAttributes } from "react";
import { OverridableComponent } from "../util/types/index.js";
import { ChipsRemovableProps } from "./Removable.js";
import { ChipsToggleProps } from "./Toggle.js";
export interface ChipsProps extends HTMLAttributes<HTMLUListElement> {
    children: React.ReactNode;
    /**
     * Changes padding and font-sizes.
     * @default "medium"
     */
    size?: "medium" | "small";
}
interface ChipsComponent extends React.ForwardRefExoticComponent<ChipsProps & React.RefAttributes<HTMLUListElement>> {
    /**
     * Toggle between selected-states.
     * @see üè∑Ô∏è {@link ToggleChipsProps}
     * @see [ü§ñ OverridableComponent](https://aksel.nav.no/grunnleggende/kode/overridablecomponent) support
     */
    Toggle: OverridableComponent<ChipsToggleProps, HTMLButtonElement>;
    /**
     * Remove filter or the likes on click.
     * @see üè∑Ô∏è {@link RemovableChipsProps}
     * @see [ü§ñ OverridableComponent](https://aksel.nav.no/grunnleggende/kode/overridablecomponent) support
     */
    Removable: OverridableComponent<ChipsRemovableProps, HTMLButtonElement>;
}
/**
 * A component that displays a list of items as chips.
 *
 * @see [üìù Documentation](https://aksel.nav.no/komponenter/core/chips)
 * @see üè∑Ô∏è {@link ChipsProps}
 *
 * @example
 * ```jsx
      <Chips size="small">
        {options.map((c) => (
          <Chips.Toggle
            selected={selected.includes(c)}
            key={c}
            onClick={() =>
              setSelected(
                selected.includes(c)
                  ? selected.filter((x) => x !== c)
                  : [...selected, c]
              )
            }
          >
            {c}
          </Chips.Toggle>
        ))}
      </Chips>
 * ```
 */
export declare const Chips: ChipsComponent;
export default Chips;
