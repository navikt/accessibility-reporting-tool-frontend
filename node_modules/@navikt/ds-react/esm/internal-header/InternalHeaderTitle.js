var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import cl from "clsx";
import React, { forwardRef } from "react";
export const InternalHeaderTitle = forwardRef((_a, ref) => {
    var { as: Component = "a", children, className } = _a, rest = __rest(_a, ["as", "children", "className"]);
    return (React.createElement(Component, Object.assign({}, rest, { ref: ref, size: "xsmall", className: cl("navds-internalheader__title", "navds-body-short", className) }),
        React.createElement("span", null, children)));
});
export default InternalHeaderTitle;
//# sourceMappingURL=InternalHeaderTitle.js.map